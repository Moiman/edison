Changes in 1.2 final
  * Fix documentation for sequences to reflect correct
    time complexities

Changes in 1.2rc4
  * introduce strict/strictWith operations for all APIs
  * add Ord* instances for PatriciaLoMap and TernaryTrie
  * add David F. Place's EnumSet implementation
  * complete the FiniteMap unit test coverage and fix a bunch
    of bugs in finite map implementations
  * add 'symmetricDifference' to Collection and
    Associated Collection APIs
  * add Ord instances for data structures
  * add Monoid instances for data structures


Changes in 1.2rc3
  * introduce the ambiguous/unambiguous concept and document
    all API operations
  * factor out methods which "mirror" superclass methods and
    make them alises instead
  * add lookupAndDelete* methods to associated collections
  * change the type of adjustOrDelete* in associated collections
  * rename subset/subsetEq to properSubset/subset
  * add matching Read and Show instances for all concrete datastructures
  * add properSubmap{By} submap{By} and sameMap{By} to the
    associated collection API
  * add Eq instances for concrete associated collections
  * break out the test suite into a separate sub-package


Changes in 1.2rc2
  * add strict variants of all folds and reduces
  * reverse argument orders to 'rcons' and 'lookup*' in
    Sequence
  * add symbolic operators for lcons, rcons, append, and lookup
    from the Sequence API
  * add symbolic operators for subsetEq, difference, intersection
    and union from the set API
  * rename 'single' to 'singleton' in all APIs
  * reaame 'intersect' to 'intersection' in Collection and
    Associated Collection APIs
  * add 'adjustOrInsert' to the Associated Collection API


Changes in 1.2rc1
  * modules re-organized into a hierarchy
  * user's guide distributed throughout source code
    as Haddock comments
  * use cabal for build system
  * add Data.Edison module to re-export typeclasses
  * reorder 'lookup*' and 'find*' methods for 
    Collections and Associated Collections
  * add 'unsafeMapMonotonic' to main Collection API
  * organize QuickCheck properties into a full test suite
  * add a 'structuralInvariant' method to all APIs, for
    unit testing
